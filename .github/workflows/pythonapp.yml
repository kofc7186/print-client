name: Unit Tests

on:
  push:
    branches-ignore:
      - master
      - docker*
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -q --upgrade pip
          pip install -r requirements.txt
          echo "::set-env name=CLOUDSDK_PYTHON::${{ env.pythonLocation }}\python.exe"
          echo "::set-env name=GCP_PROJECT::print-client-123456"
          echo "::set-env name=GCLOUD_PATH::$($env:TEMP)\google-cloud-sdk"
          echo "::set-env name=GCLOUD_BIN::$($env:TEMP)\google-cloud-sdk\bin\gcloud"
      - name: Lint with flake8
        run: |
          pip install -q flake8 pytest pytest-cov
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics
      - name: Run unit tests
        run: |
          pytest -s -o log_cli=True test_unit.py
      - name: Run unit tests with coverage
        run: |
          pytest --cov=. --cov-report term-missing test_unit.py
      - name: Set up Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8.0.232
          java-package: jre
          architecture: x64
      - name: Check Cache for Google Cloud SDK
        uses: actions/cache@v1
        id: cache-google-cloud-sdk
        with:
          path: ${{ env.GCLOUD_PATH }}
          key: ${{ runner.os }}-gcloud-sdk-${{ hashFiles('.github/workflows/pythonapp.yml') }}
      - name: Download Google Cloud SDK
        if: steps.cache-google-cloud-sdk.outputs.cache-hit != 'true'
        run: |
          $Url = 'https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-274.0.0-windows-x86_64.zip'
          $Dest = $env:TEMP
          $ZipFile = $Dest + '\' + $(Split-Path -Path $Url -Leaf)
          $wc = New-Object net.webclient
          $wc.Downloadfile($Url, $ZipFile)

          $ExtractShell = New-Object -ComObject Shell.Application
          $Files = $ExtractShell.Namespace($ZipFile).Items()
          $ExtractShell.NameSpace($Dest).CopyHere($Files)
      - name: Install Google Cloud SDK
        if: steps.cache-google-cloud-sdk.outputs.cache-hit != 'true'
        run: |
          &$($env:GCLOUD_PATH + "\install.bat") --quiet --additional-components beta pubsub-emulator cloud-firestore-emulator
      - name: Update Google Cloud SDK to latest
        run: |
          ${{ env.GCLOUD_BIN }} components update
        shell: cmd
      - name: Start GCP Pub/Sub Emulator
        run: |
          $PUBSUB_EMULATOR_HOST = "127.0.0.1:8538"
          $app = Start-Process -FilePath $($env:GCLOUD_BIN) -PassThru -ArgumentList "beta emulators pubsub start --project=$($env:GCP_PROJECT) --host-port=$($PUBSUB_EMULATOR_HOST)"
          echo "::set-env name=PUBSUB_EMULATOR_PID::$($app.Id)"
          echo "::set-env name=PUBSUB_EMULATOR_HOST::$($PUBSUB_EMULATOR_HOST)"
      - name: Start GCP Cloud Firestore Emulator
        run: |
          $FIRESTORE_EMULATOR_HOST = "127.0.0.1:8539"
          $app = Start-Process -FilePath $($env:GCLOUD_BIN) -PassThru -ArgumentList "beta emulators firestore start --project=$($env:GCP_PROJECT) --host-port=$($FIRESTORE_EMULATOR_HOST)"
          echo "::set-env name=FIRESTORE_EMULATOR_PID::$($app.Id)"
          echo "::set-env name=FIRESTORE_EMULATOR_HOST::$($FIRESTORE_EMULATOR_HOST)"
      - name: Run integration tests
        run: |
          pytest -s -o log_cli=True --log-level DEBUG test_integration.py
      - name: Run integration tests with coverage
        run: |
          pytest --cov=. --cov-report term-missing test_integration.py
      - name: Stop emulators
        continue-on-error: true
        run: |
          Stop-Process -Id $env:PUBSUB_EMULATOR_PID,$env:FIRESTORE_EMULATOR_PID
